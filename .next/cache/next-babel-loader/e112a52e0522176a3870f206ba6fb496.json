{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/fredr/Documents/Universitet/HT20/2DV515 - Web Intelligence/A3/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/fredr/Documents/Universitet/HT20/2DV515 - Web Intelligence/A3/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\fredr\\\\Documents\\\\Universitet\\\\HT20\\\\2DV515 - Web Intelligence\\\\A3\\\\pages\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/* Lib */\nimport cx from 'classnames';\nimport { useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\n\nvar Index = function Index() {\n  _s();\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      watch = _useForm.watch,\n      errors = _useForm.errors;\n\n  var fetchCluster = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/api/search').then(function (res) {\n                return res.json();\n              }).then(function (result) {\n                setCluster(result);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchCluster() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchCluster();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: cx(['mt-5'])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(Index, \"GrQgLli4BCbGrDzCZdRT9XAbza8=\", false, function () {\n  return [useForm];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/fredr/Documents/Universitet/HT20/2DV515 - Web Intelligence/A3/pages/index.tsx"],"names":["cx","useEffect","Container","useForm","Index","register","handleSubmit","watch","errors","fetchCluster","fetch","then","res","json","result","setCluster"],"mappings":";;;;;;;;;AAAA;AACA,OAAOA,EAAP,MAAe,YAAf;AACA,SAASC,SAAT,QAAoC,OAApC;AACA,SAASC,SAAT,QAA8D,iBAA9D;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAW;AAAA;;AAAA,iBAC2BD,OAAO,EADlC;AAAA,MACfE,QADe,YACfA,QADe;AAAA,MACLC,YADK,YACLA,YADK;AAAA,MACSC,KADT,YACSA,KADT;AAAA,MACgBC,MADhB,YACgBA,MADhB;;AAGvB,MAAMC,YAAiB;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAClBC,KAAK,CAAC,aAAD,CAAL,CACHC,IADG,CACE,UAACC,GAAD;AAAA,uBAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,eADF,EAEHF,IAFG,CAEE,UAACG,MAAD,EAAY;AAChBC,gBAAAA,UAAU,CAACD,MAAD,CAAV;AACD,eAJG,CADkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAjBL,YAAiB;AAAA;AAAA;AAAA,KAAvB;;AAQAR,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAET,EAAE,CAAC,CAAC,MAAD,CAAD;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CApBD;;GAAMI,K;UAC8CD,O;;;KAD9CC,K;AAsBN,eAAeA,KAAf","sourcesContent":["/* Lib */\r\nimport cx from 'classnames'\r\nimport { useEffect, useState } from 'react'\r\nimport { Container, Accordion, Card, Button, ListGroup } from 'react-bootstrap'\r\nimport { useForm } from 'react-hook-form'\r\n\r\nconst Index = (): any => {\r\n  const { register, handleSubmit, watch, errors } = useForm()\r\n\r\n  const fetchCluster: any = async () => {\r\n    await fetch('/api/search')\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        setCluster(result)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchCluster()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Container className={cx(['mt-5'])}></Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Index\r\n"]},"metadata":{},"sourceType":"module"}