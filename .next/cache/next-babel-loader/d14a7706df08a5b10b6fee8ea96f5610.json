{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\fredr\\\\Documents\\\\Universitet\\\\HT20\\\\2DV515 - Web Intelligence\\\\A1\\\\pages\\\\index.tsx\";\n\n/* Lib */\nimport cx from 'classnames';\nimport { useEffect, useState } from 'react';\n\nconst Index = () => {\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: isLoaded,\n    1: setIsLoaded\n  } = useState(false);\n  const {\n    0: users,\n    1: setUsers\n  } = useState([]);\n  const {\n    0: target,\n    1: setTarget\n  } = useState(0);\n  const {\n    0: sim,\n    1: setSim\n  } = useState(0);\n\n  const fetchUsers = async () => {\n    await fetch('/api/users').then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setUsers(result);\n      setTarget(result[0].id); // first user as default\n\n      console.log(result);\n    });\n  };\n\n  const fetchStats = async id => {\n    await fetch(`/api/euclidean/${id}`).then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      console.log(result);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  };\n\n  const handleUserChange = e => {\n    setTarget(parseInt(e.target.value));\n  };\n\n  const handleSimChange = e => {\n    setSim(parseInt(e.target.value));\n  };\n\n  let simList = [{\n    value: 1,\n    description: 'Euclidean'\n  }, {\n    value: 2,\n    description: 'Pearson Colleration'\n  }];\n  useEffect(() => {\n    fetchUsers();\n    fetchStats(target);\n  }, [target]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cx(['container'], ['m-5']),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx(['row']),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: cx(['col-sm']),\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"custom-select\",\n          onChange: handleUserChange,\n          children: users.map((u, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: u.id,\n            children: [u.id, \": \", u.name]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 59\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cx(['col-sm']),\n        onChange: handleSimChange,\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"custom-select\",\n          children: simList.map((sim, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: i,\n            children: sim.description\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 63\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/fredr/Documents/Universitet/HT20/2DV515 - Web Intelligence/A1/pages/index.tsx"],"names":["cx","useEffect","useState","Index","error","setError","isLoaded","setIsLoaded","users","setUsers","target","setTarget","sim","setSim","fetchUsers","fetch","then","res","json","result","id","console","log","fetchStats","handleUserChange","e","parseInt","value","handleSimChange","simList","description","map","u","i","name"],"mappings":"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","sourcesContent":["/* Lib */\r\nimport cx from 'classnames';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst Index = () => {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [users, setUsers] = useState([]);\r\n    const [target, setTarget] = useState(0);\r\n    const [sim, setSim] = useState(0);\r\n\r\n    const fetchUsers = async () => {\r\n        await fetch('/api/users')\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(true);\r\n                    setUsers(result);\r\n                    setTarget(result[0].id); // first user as default\r\n                    console.log(result);\r\n                }\r\n        )\r\n    }\r\n\r\n    const fetchStats = async (id: number) => {\r\n        await fetch(`/api/euclidean/${id}`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(true);\r\n                    console.log(result);\r\n                },\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n        )\r\n    }\r\n\r\n    const handleUserChange = (e: any) => {\r\n        setTarget(parseInt(e.target.value));\r\n    }\r\n\r\n    const handleSimChange = (e: any) => {\r\n        setSim(parseInt(e.target.value));\r\n    }\r\n\r\n    let simList = [{ value: 1, description: 'Euclidean' }, { value: 2, description: 'Pearson Colleration' }];\r\n\r\n    useEffect(() => {\r\n        fetchUsers();\r\n        fetchStats(target);\r\n    }, [target])\r\n\r\n    return (\r\n        <div className={cx(['container'], ['m-5'])}>\r\n            <div className={cx(['row'])}>\r\n                <div className={cx(['col-sm'])}>\r\n                    <select className=\"custom-select\" onChange={handleUserChange}>\r\n                        {users.map((u: any, i: number) => <option value={u.id} key={i}>{u.id}: {u.name}</option>)}\r\n                    </select>\r\n                </div>\r\n                <div className={cx(['col-sm'])} onChange={handleSimChange}>\r\n                    <select className=\"custom-select\">\r\n                        {simList.map((sim: any, i: number) => <option value={i} key={i}>{sim.description}</option>)}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}