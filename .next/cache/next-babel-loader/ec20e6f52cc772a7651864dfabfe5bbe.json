{"ast":null,"code":"import jsonResult from '../../shared/functions/convertDatasetToJson';\nimport { Centroid } from '../../shared/functions/centroid';\n\nconst random = from => to => from + Math.random() * (to - from);\n\nconst kMean = (req, res) => {\n  const n = jsonResult()[0].total;\n  const centroids = [];\n\n  for (let i = 0; i < 5; i++) {\n    centroids[i] = new Centroid(); // for (let j = 0; i <= n; j++) {\n    //   // centroids[i].setWordCount(i, random(min)(max))\n    // }\n  } //   res.json(JSON.stringify(jsonResult()[0].total, null, 2))\n\n\n  res.json(random(0)(5));\n};\n\nexport default kMean;","map":{"version":3,"sources":["C:/Users/fredr/Documents/Universitet/HT20/2DV515 - Web Intelligence/A2/pages/api/blog.ts"],"names":["jsonResult","Centroid","random","from","to","Math","kMean","req","res","n","total","centroids","i","json"],"mappings":"AACA,OAAOA,UAAP,MAAuB,6CAAvB;AAEA,SACEC,QADF,QAKO,iCALP;;AAOA,MAAMC,MAAM,GAAIC,IAAD,IAAWC,EAAD,IAAQD,IAAI,GAAGE,IAAI,CAACH,MAAL,MAAiBE,EAAE,GAAGD,IAAtB,CAAxC;;AAEA,MAAMG,KAAK,GAAG,CAACC,GAAD,EAAsBC,GAAtB,KAA+C;AAC3D,QAAMC,CAAC,GAAGT,UAAU,GAAG,CAAH,CAAV,CAAgBU,KAA1B;AACA,QAAMC,SAAS,GAAG,EAAlB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BD,IAAAA,SAAS,CAACC,CAAD,CAAT,GAAe,IAAIX,QAAJ,EAAf,CAD0B,CAE1B;AACA;AACA;AACD,GAT0D,CAW3D;;;AACAO,EAAAA,GAAG,CAACK,IAAJ,CAASX,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAT;AACD,CAbD;;AAeA,eAAeI,KAAf","sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next'\r\nimport jsonResult from '../../shared/functions/convertDatasetToJson'\r\n\r\nimport {\r\n  Centroid,\r\n  clearAssignments,\r\n  assign,\r\n  isUnchanged,\r\n} from '../../shared/functions/centroid'\r\n\r\nconst random = (from) => (to) => from + Math.random() * (to - from)\r\n\r\nconst kMean = (req: NextApiRequest, res: NextApiResponse) => {\r\n  const n = jsonResult()[0].total\r\n  const centroids = []\r\n\r\n  for (let i = 0; i < 5; i++) {\r\n    centroids[i] = new Centroid()\r\n    // for (let j = 0; i <= n; j++) {\r\n    //   // centroids[i].setWordCount(i, random(min)(max))\r\n    // }\r\n  }\r\n\r\n  //   res.json(JSON.stringify(jsonResult()[0].total, null, 2))\r\n  res.json(random(0)(5))\r\n}\r\n\r\nexport default kMean\r\n"]},"metadata":{},"sourceType":"module"}