{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\fredr\\\\Documents\\\\Universitet\\\\HT20\\\\2DV515 - Web Intelligence\\\\A1\\\\pages\\\\index.tsx\";\n\n/* Lib */\nimport cx from 'classnames';\nimport { useState } from 'react';\n\nconst Index = () => {\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: isLoaded,\n    1: setIsLoaded\n  } = useState(false);\n  const {\n    0: users,\n    1: setUsers\n  } = useState([]);\n  const {\n    0: target,\n    1: setTarget\n  } = useState(1);\n  const {\n    0: sim,\n    1: setSim\n  } = useState(0);\n\n  const fetchUsers = async () => {\n    fetch('/api/users').then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setUsers(result);\n      console.log(result);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }; // useEffect(() => {\n  //     fetch('/api/users')\n  //         .then(res => res.json())\n  //         .then(\n  //             (result) => {\n  //                 setIsLoaded(true);\n  //                 setUsers(result);\n  //                 console.log(result);\n  //             },\n  //             (error) => {\n  //                 setIsLoaded(true);\n  //                 setError(error);\n  //             }\n  //     )\n  // })\n\n\n  const handleUserChange = e => {\n    setTarget(e.target.value);\n  };\n\n  const handleSimChange = e => {\n    setSim(e.target.value);\n  };\n\n  let simList = [{\n    value: 1,\n    description: 'Euclidean'\n  }, {\n    value: 2,\n    description: 'Pearson Colleration'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cx(['container'], ['m-5']),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx(['row']),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: cx(['col-sm']),\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"custom-select\",\n          onChange: handleUserChange,\n          children: users.map((u, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: u.id,\n            children: [u.id, \": \", u.name]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 59\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cx(['col-sm']),\n        onChange: handleSimChange,\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"custom-select\",\n          children: simList.map((sim, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: i,\n            children: sim.description\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 63\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/fredr/Documents/Universitet/HT20/2DV515 - Web Intelligence/A1/pages/index.tsx"],"names":["cx","useState","Index","error","setError","isLoaded","setIsLoaded","users","setUsers","target","setTarget","sim","setSim","fetchUsers","fetch","then","res","json","result","console","log","handleUserChange","e","value","handleSimChange","simList","description","map","u","i","id","name"],"mappings":"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","sourcesContent":["/* Lib */\r\nimport cx from 'classnames';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst Index = () => {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [users, setUsers] = useState([]);\r\n    const [target, setTarget] = useState(1);\r\n    const [sim, setSim] = useState(0);\r\n\r\n    const fetchUsers = async () => {\r\n                fetch('/api/users')\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(true);\r\n                    setUsers(result);\r\n                    console.log(result);\r\n                },\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n        )\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     fetch('/api/users')\r\n    //         .then(res => res.json())\r\n    //         .then(\r\n    //             (result) => {\r\n    //                 setIsLoaded(true);\r\n    //                 setUsers(result);\r\n    //                 console.log(result);\r\n    //             },\r\n    //             (error) => {\r\n    //                 setIsLoaded(true);\r\n    //                 setError(error);\r\n    //             }\r\n    //     )\r\n    // })\r\n\r\n    const handleUserChange = (e: any) => {\r\n        setTarget(e.target.value);\r\n    }\r\n\r\n    const handleSimChange = (e: any) => {\r\n        setSim(e.target.value);\r\n    }\r\n\r\n    let simList = [{ value: 1, description: 'Euclidean' }, { value: 2, description: 'Pearson Colleration' }];\r\n\r\n    return (\r\n        <div className={cx(['container'], ['m-5'])}>\r\n            <div className={cx(['row'])}>\r\n                <div className={cx(['col-sm'])}>\r\n                    <select className=\"custom-select\" onChange={handleUserChange}>\r\n                        {users.map((u: any, i: number) => <option value={u.id} key={i}>{u.id}: {u.name}</option>)}\r\n                    </select>\r\n                </div>\r\n                <div className={cx(['col-sm'])} onChange={handleSimChange}>\r\n                    <select className=\"custom-select\">\r\n                        {simList.map((sim: any, i: number) => <option value={i} key={i}>{sim.description}</option>)}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}