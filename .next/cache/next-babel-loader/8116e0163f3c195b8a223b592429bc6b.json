{"ast":null,"code":"const sqlite3 = require('sqlite3');\n\nconst sqlite = require('sqlite');\n\nconst ratingsByMovieId = async (req, res) => {\n  const id = req.query.id; // console.log(id.length)\n  // let string: String = 'Hejsan';\n  // let chars = string.split(',');\n\n  /* DB connection */\n\n  const db = await sqlite.open({\n    filename: './mydb.sqlite',\n    driver: sqlite3.Database\n  });\n  /* Retrieve ratings */\n\n  let ratings = await db.all('SELECT title, ratings.movieId, name, users.id AS userId, ratings.rating FROM ratings, users, movies WHERE users.id = userId AND movies.id = movieId AND movies.id = ?', [id]);\n  ratings = JSON.stringify(ratings, null, 2);\n  res.json(ratings);\n};\n\nexport default ratingsByMovieId;","map":{"version":3,"sources":["C:/Users/fredr/Documents/Universitet/HT20/2DV515 - Web Intelligence/A1/pages/api/ratings/movie/[id].ts"],"names":["sqlite3","require","sqlite","ratingsByMovieId","req","res","id","query","db","open","filename","driver","Database","ratings","all","JSON","stringify","json"],"mappings":"AACA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AAEA,MAAME,gBAAgB,GAAG,OAAOC,GAAP,EAA4BC,GAA5B,KAAqD;AAC1E,QAAMC,EAAE,GAAGF,GAAG,CAACG,KAAJ,CAAUD,EAArB,CAD0E,CAG1E;AAEA;AACA;;AAEA;;AACA,QAAME,EAAE,GAAG,MAAMN,MAAM,CAACO,IAAP,CAAY;AACzBC,IAAAA,QAAQ,EAAE,eADe;AAEzBC,IAAAA,MAAM,EAAEX,OAAO,CAACY;AAFS,GAAZ,CAAjB;AAKA;;AACA,MAAIC,OAAO,GAAG,MAAML,EAAE,CAACM,GAAH,CAAO,uKAAP,EAAgL,CAACR,EAAD,CAAhL,CAApB;AACAO,EAAAA,OAAO,GAAGE,IAAI,CAACC,SAAL,CAAeH,OAAf,EAAwB,IAAxB,EAA8B,CAA9B,CAAV;AAEAR,EAAAA,GAAG,CAACY,IAAJ,CAASJ,OAAT;AACH,CAnBD;;AAqBA,eAAeV,gBAAf","sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next';\r\nconst sqlite3 = require('sqlite3');\r\nconst sqlite = require('sqlite');\r\n\r\nconst ratingsByMovieId = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    const id = req.query.id;\r\n\r\n    // console.log(id.length)\r\n\r\n    // let string: String = 'Hejsan';\r\n    // let chars = string.split(',');\r\n\r\n    /* DB connection */\r\n    const db = await sqlite.open({\r\n        filename: './mydb.sqlite',\r\n        driver: sqlite3.Database\r\n    });\r\n        \r\n    /* Retrieve ratings */\r\n    let ratings = await db.all('SELECT title, ratings.movieId, name, users.id AS userId, ratings.rating FROM ratings, users, movies WHERE users.id = userId AND movies.id = movieId AND movies.id = ?', [id]);\r\n    ratings = JSON.stringify(ratings, null, 2);\r\n\r\n    res.json(ratings);\r\n}\r\n\r\nexport default ratingsByMovieId;"]},"metadata":{},"sourceType":"module"}