{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\fredr\\\\Documents\\\\Universitet\\\\HT20\\\\2DV515 - Web Intelligence\\\\A1\\\\pages\\\\index.tsx\";\n\n/* Lib */\nimport cx from 'classnames';\nimport { useEffect, useState } from 'react';\n\nconst Index = () => {\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: isLoaded,\n    1: setIsLoaded\n  } = useState(false);\n  const {\n    0: users,\n    1: setUsers\n  } = useState([]); // get users\n\n  const {\n    0: target,\n    1: setTarget\n  } = useState(0); // target user\n\n  const {\n    0: sim,\n    1: setSim\n  } = useState(0); // chosen similarity\n\n  const {\n    0: euclidean,\n    1: setEuclidean\n  } = useState([]); // recommendations\n\n  const {\n    0: pearson,\n    1: setPearson\n  } = useState([]); // recommendations\n\n  const {\n    0: display,\n    1: setDisplay\n  } = useState(0); // display either people or movies\n\n  const fetchUsers = async () => {\n    await fetch('/api/users').then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setUsers(result);\n      setTarget(result[0].id); // first user as default\n\n      console.log(result);\n    });\n  };\n\n  const fetchStats = async id => {\n    await fetch(`/api/sim/${id}`).then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setEuclidean([{\n        matching_users: result[0]['top_matching_users'][0]['euclidean'],\n        matching_movies: result[0]['recommended_movies'][0]['euclidean']\n      }]);\n      setPearson([{\n        matching_users: result[0]['top_matching_users'][1]['pearson_correlation'],\n        matching_movies: result[0]['recommended_movies'][1]['pearson_correlation']\n      }]);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  };\n\n  const handleUserChange = e => {\n    setTarget(parseInt(e.target.value));\n  };\n\n  const handleSimChange = e => {\n    setSim(parseInt(e.target.value));\n  };\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  useEffect(() => {\n    target != 0 ? fetchStats(target) : null;\n  }, [target]);\n  let simList = [{\n    value: 1,\n    description: 'Euclidean'\n  }, {\n    value: 2,\n    description: 'Pearson Colleration'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cx(['container'], ['m-5']),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx(['row'], ['mb-3']),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: cx(['col-sm']),\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"custom-select\",\n          onChange: handleUserChange,\n          children: users && users.map((u, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: u.id,\n            children: [u.id, \": \", u.name]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 68\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cx(['col-sm']),\n        onChange: handleSimChange,\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"custom-select\",\n          children: simList && simList.map((sim, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: i,\n            children: sim.description\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 74\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx(['row']),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cx(['col-sm']),\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: cx(['table']),\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Score\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [sim == 0 && \"\", sim == 1 && \"Pearson\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/fredr/Documents/Universitet/HT20/2DV515 - Web Intelligence/A1/pages/index.tsx"],"names":["cx","useEffect","useState","Index","error","setError","isLoaded","setIsLoaded","users","setUsers","target","setTarget","sim","setSim","euclidean","setEuclidean","pearson","setPearson","display","setDisplay","fetchUsers","fetch","then","res","json","result","id","console","log","fetchStats","matching_users","matching_movies","handleUserChange","e","parseInt","value","handleSimChange","simList","description","map","u","i","name"],"mappings":"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","sourcesContent":["/* Lib */\r\nimport cx from 'classnames';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst Index = () => {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    const [users, setUsers] = useState([]); // get users\r\n    const [target, setTarget] = useState(0); // target user\r\n    const [sim, setSim] = useState(0); // chosen similarity\r\n\r\n    const [euclidean, setEuclidean] = useState([]) // recommendations\r\n    const [pearson, setPearson] = useState([]) // recommendations\r\n\r\n    const [display, setDisplay] = useState(0) // display either people or movies\r\n\r\n    const fetchUsers = async () => {\r\n        await fetch('/api/users')\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(true);\r\n                    setUsers(result);\r\n                    setTarget(result[0].id); // first user as default\r\n                    console.log(result);\r\n                }\r\n            )\r\n    }\r\n\r\n    const fetchStats = async (id: number) => {\r\n        await fetch(`/api/sim/${id}`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(true);\r\n                    setEuclidean([\r\n                        {\r\n                            matching_users: result[0]['top_matching_users'][0]['euclidean'],\r\n                            matching_movies: result[0]['recommended_movies'][0]['euclidean']\r\n                        },\r\n                    ])\r\n                    setPearson([\r\n                        {\r\n                            matching_users: result[0]['top_matching_users'][1]['pearson_correlation'],\r\n                            matching_movies: result[0]['recommended_movies'][1]['pearson_correlation']\r\n                        },\r\n                    ])\r\n                },\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n            )\r\n    }\r\n\r\n    const handleUserChange = (e: any) => {\r\n        setTarget(parseInt(e.target.value));\r\n    }\r\n\r\n    const handleSimChange = (e: any) => {\r\n        setSim(parseInt(e.target.value));\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchUsers();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        target != 0 ? fetchStats(target) : null;\r\n    }, [target])\r\n\r\n    let simList = [{ value: 1, description: 'Euclidean' }, { value: 2, description: 'Pearson Colleration' }];\r\n\r\n    return (\r\n        <div className={cx(['container'], ['m-5'])}>\r\n            <div className={cx(['row'], ['mb-3'])}>\r\n                <div className={cx(['col-sm'])}>\r\n                    <select className=\"custom-select\" onChange={handleUserChange}>\r\n                        {users && users.map((u: any, i: number) => <option value={u.id} key={i}>{u.id}: {u.name}</option>)}\r\n                    </select>\r\n                </div>\r\n                <div className={cx(['col-sm'])} onChange={handleSimChange}>\r\n                    <select className=\"custom-select\">\r\n                        {simList && simList.map((sim: any, i: number) => <option value={i} key={i}>{sim.description}</option>)}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div className={cx(['row'])}>\r\n                <div className={cx(['col-sm'])}>\r\n                    <table className={cx(['table'])}>\r\n                        <thead>\r\n                            <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Title</th>\r\n                            <th scope=\"col\">Score</th>\r\n                            </tr>\r\n                        </thead>    \r\n                        <tbody>\r\n                            {\r\n                                sim == 0 && \"\"\r\n                            }\r\n                            {\r\n                                sim == 1 && \"Pearson\"\r\n                            }\r\n                        </tbody>    \r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}