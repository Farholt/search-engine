{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\fredr\\\\Documents\\\\Universitet\\\\HT20\\\\2DV515 - Web Intelligence\\\\A3\\\\pages\\\\index.tsx\";\n\n/* Lib */\nimport cx from 'classnames';\nimport { Container } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\n\nconst Index = () => {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = data => fetchSearch(data.query);\n\n  const fetchSearch = async q => {\n    const body = {\n      query: q\n    };\n    await fetch('/api/search', body).then(res => res.json('hello')).then(result => {\n      console.log(result);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: cx(['mt-5']),\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"query\",\n          ref: register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/fredr/Documents/Universitet/HT20/2DV515 - Web Intelligence/A3/pages/index.tsx"],"names":["cx","Container","useForm","Index","register","handleSubmit","errors","onSubmit","data","fetchSearch","query","q","body","fetch","then","res","json","result","console","log"],"mappings":";;;;AAAA;AACA,OAAOA,EAAP,MAAe,YAAf;AAEA,SAASC,SAAT,QAA8D,iBAA9D;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,MAAMC,KAAK,GAAG,MAAW;AACvB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCJ,OAAO,EAAlD;;AAEA,QAAMK,QAAQ,GAAIC,IAAD,IAAeC,WAAW,CAACD,IAAI,CAACE,KAAN,CAA3C;;AAEA,QAAMD,WAAW,GAAG,MAAOE,CAAP,IAAqB;AACvC,UAAMC,IAAY,GAAG;AACnBF,MAAAA,KAAK,EAAEC;AADY,KAArB;AAGA,UAAME,KAAK,CAAC,aAAD,EAAgBD,IAAhB,CAAL,CACHE,IADG,CACGC,GAAD,IAASA,GAAG,CAACC,IAAJ,CAAS,OAAT,CADX,EAEHF,IAFG,CAEGG,MAAD,IAAY;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,KAJG,CAAN;AAKD,GATD;;AAWA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAEjB,EAAE,CAAC,CAAC,MAAD,CAAD,CAAxB;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAEK,YAAY,CAACE,QAAD,CAA5B;AAAA,gCAEE;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,GAAG,EAAEH;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAWD,CA3BD;;AA6BA,eAAeD,KAAf","sourcesContent":["/* Lib */\r\nimport cx from 'classnames'\r\nimport { useEffect, useState } from 'react'\r\nimport { Container, Accordion, Card, Button, ListGroup } from 'react-bootstrap'\r\nimport { useForm } from 'react-hook-form'\r\n\r\nconst Index = (): any => {\r\n  const { register, handleSubmit, errors } = useForm()\r\n\r\n  const onSubmit = (data: any) => fetchSearch(data.query)\r\n\r\n  const fetchSearch = async (q: string) => {\r\n    const body: object = {\r\n      query: q\r\n    }\r\n    await fetch('/api/search', body)\r\n      .then((res) => res.json('hello'))\r\n      .then((result) => {\r\n        console.log(result)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container className={cx(['mt-5'])}>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          {/* register your input into the hook by invoking the \"register\" function */}\r\n          <input name=\"query\" ref={register} />\r\n          <input type=\"submit\" />\r\n        </form>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Index\r\n"]},"metadata":{},"sourceType":"module"}