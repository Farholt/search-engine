{"ast":null,"code":"import jsonResult from '../../shared/functions/convertDatasetToJson';\nimport { Centroid } from '../../shared/functions/centroid';\n\nconst random = from => to => from + Math.random() * (to - from);\n\nconst initCentroid = (k, ranges) => {\n  const centroids = [];\n\n  for (let i = 0; i < k; i++) {\n    centroids[i] = new Centroid();\n    ranges.forEach(({\n      min,\n      max\n    }, idx) => {\n      centroids[i].setWordCount(idx, random(min)(max));\n    });\n  }\n\n  return centroids;\n};\n\nconst kMean = (req, res) => {\n  const n = jsonResult()[0].total;\n  res.json(JSON.stringify(jsonResult()[0].total, null, 2));\n};\n\nexport default kMean;","map":{"version":3,"sources":["C:/Users/fredr/Documents/Universitet/HT20/2DV515 - Web Intelligence/A2/pages/api/blog.ts"],"names":["jsonResult","Centroid","random","from","to","Math","initCentroid","k","ranges","centroids","i","forEach","min","max","idx","setWordCount","kMean","req","res","n","total","json","JSON","stringify"],"mappings":"AACA,OAAOA,UAAP,MAAuB,6CAAvB;AAEA,SACEC,QADF,QAKO,iCALP;;AAOA,MAAMC,MAAM,GAAIC,IAAD,IAAmBC,EAAD,IAC/BD,IAAI,GAAGE,IAAI,CAACH,MAAL,MAAiBE,EAAE,GAAGD,IAAtB,CADT;;AAGA,MAAMG,YAAY,GAAG,CAACC,CAAD,EAASC,MAAT,KAAyB;AAC5C,QAAMC,SAAS,GAAG,EAAlB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,CAApB,EAAuBG,CAAC,EAAxB,EAA4B;AAC1BD,IAAAA,SAAS,CAACC,CAAD,CAAT,GAAe,IAAIT,QAAJ,EAAf;AACAO,IAAAA,MAAM,CAACG,OAAP,CAAe,CAAC;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,KAAD,EAAeC,GAAf,KAAuB;AACpCL,MAAAA,SAAS,CAACC,CAAD,CAAT,CAAaK,YAAb,CAA0BD,GAA1B,EAA+BZ,MAAM,CAACU,GAAD,CAAN,CAAYC,GAAZ,CAA/B;AACD,KAFD;AAGD;;AAED,SAAOJ,SAAP;AACD,CAXD;;AAaA,MAAMO,KAAK,GAAG,CAACC,GAAD,EAAsBC,GAAtB,KAA+C;AAC3D,QAAMC,CAAC,GAAGnB,UAAU,GAAG,CAAH,CAAV,CAAgBoB,KAA1B;AAEAF,EAAAA,GAAG,CAACG,IAAJ,CAASC,IAAI,CAACC,SAAL,CAAevB,UAAU,GAAG,CAAH,CAAV,CAAgBoB,KAA/B,EAAsC,IAAtC,EAA4C,CAA5C,CAAT;AACD,CAJD;;AAMA,eAAeJ,KAAf","sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next'\r\nimport jsonResult from '../../shared/functions/convertDatasetToJson'\r\n\r\nimport {\r\n  Centroid,\r\n  clearAssignments,\r\n  assign,\r\n  isUnchanged,\r\n} from '../../shared/functions/centroid'\r\n\r\nconst random = (from: number) => (to: number) =>\r\n  from + Math.random() * (to - from)\r\n\r\nconst initCentroid = (k: any, ranges: any) => {\r\n  const centroids = []\r\n\r\n  for (let i = 0; i < k; i++) {\r\n    centroids[i] = new Centroid()\r\n    ranges.forEach(({ min, max }, idx) => {\r\n      centroids[i].setWordCount(idx, random(min)(max))\r\n    })\r\n  }\r\n\r\n  return centroids\r\n}\r\n\r\nconst kMean = (req: NextApiRequest, res: NextApiResponse) => {\r\n  const n = jsonResult()[0].total\r\n\r\n  res.json(JSON.stringify(jsonResult()[0].total, null, 2))\r\n}\r\n\r\nexport default kMean\r\n"]},"metadata":{},"sourceType":"module"}