{"ast":null,"code":"import { NextApiRequest, NextApiResponse } from 'next';\nimport jsonResult from '../../shared/functions/convertDatasetToJson'; // import {\n//   Centroid,\n//   clearAssignments,\n//   assign,\n//   isUnchanged,\n// } from '../../shared/functions/centroid'\n\nimport Centroid from '../../shared/functions/centroid';\n\nconst random = from => to => from + Math.random() * (to - from);\n\nconst kMean = (req, res) => {\n  const n = jsonResult()[0].total;\n  const centroids = [];\n\n  for (let i = 0; i < 5; i++) {\n    centroids[i] = new Centroid(); // for (let j = 0; i <= n; j++) {\n    //   // centroids[i].setWordCount(i, random(min)(max))\n    // }\n  } //   res.json(JSON.stringify(jsonResult()[0].total, null, 2))\n\n\n  res.json(random(0)(5));\n};\n\nexport default kMean;","map":{"version":3,"sources":["C:/Users/fredr/Documents/Universitet/HT20/2DV515 - Web Intelligence/A2/pages/api/blog.js"],"names":["NextApiRequest","NextApiResponse","jsonResult","Centroid","random","from","to","Math","kMean","req","res","n","total","centroids","i","json"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,eAAzB,QAAgD,MAAhD;AACA,OAAOC,UAAP,MAAuB,6CAAvB,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOC,QAAP,MAAqB,iCAArB;;AAEA,MAAMC,MAAM,GAAIC,IAAD,IAAWC,EAAD,IAAQD,IAAI,GAAGE,IAAI,CAACH,MAAL,MAAiBE,EAAE,GAAGD,IAAtB,CAAxC;;AAEA,MAAMG,KAAK,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC1B,QAAMC,CAAC,GAAGT,UAAU,GAAG,CAAH,CAAV,CAAgBU,KAA1B;AACA,QAAMC,SAAS,GAAG,EAAlB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BD,IAAAA,SAAS,CAACC,CAAD,CAAT,GAAe,IAAIX,QAAJ,EAAf,CAD0B,CAE1B;AACA;AACA;AACD,GATyB,CAW1B;;;AACAO,EAAAA,GAAG,CAACK,IAAJ,CAASX,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAT;AACD,CAbD;;AAeA,eAAeI,KAAf","sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next'\r\nimport jsonResult from '../../shared/functions/convertDatasetToJson'\r\n\r\n// import {\r\n//   Centroid,\r\n//   clearAssignments,\r\n//   assign,\r\n//   isUnchanged,\r\n// } from '../../shared/functions/centroid'\r\n\r\nimport Centroid from '../../shared/functions/centroid'\r\n\r\nconst random = (from) => (to) => from + Math.random() * (to - from)\r\n\r\nconst kMean = (req, res) => {\r\n  const n = jsonResult()[0].total\r\n  const centroids = []\r\n\r\n  for (let i = 0; i < 5; i++) {\r\n    centroids[i] = new Centroid()\r\n    // for (let j = 0; i <= n; j++) {\r\n    //   // centroids[i].setWordCount(i, random(min)(max))\r\n    // }\r\n  }\r\n\r\n  //   res.json(JSON.stringify(jsonResult()[0].total, null, 2))\r\n  res.json(random(0)(5))\r\n}\r\n\r\nexport default kMean\r\n"]},"metadata":{},"sourceType":"module"}