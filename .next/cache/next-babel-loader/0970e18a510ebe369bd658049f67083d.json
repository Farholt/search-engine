{"ast":null,"code":"const sqlite3 = require('sqlite3');\n\nconst sqlite = require('sqlite');\n\nconst euclidean = async (req, res) => {\n  const id = req.query.id; // main user\n\n  /* DB connection */\n\n  const db = await sqlite.open({\n    filename: './mydb.sqlite',\n    driver: sqlite3.Database\n  });\n  /* Retrieve ratings that belongs to main user */\n\n  let ratings1 = await db.all('SELECT userId, movieId, ratings.rating FROM ratings, users, movies WHERE users.id = userId AND movies.id = movieId AND users.id = ?', [id]);\n  ratings1 = JSON.stringify(ratings1, null, 2);\n  /* Retrieve ratings for all the other users */\n\n  let ratings2 = await db.all('SELECT userId, ratings.movieId, ratings.rating FROM ratings, users, movies WHERE users.id = userId AND movies.id = movieId AND users.id != ?', [2]);\n  ratings2 = JSON.stringify(ratings2, null, 2);\n  res.json(ratings1);\n  res.json(ratings2);\n};\n\nexport default euclidean;","map":{"version":3,"sources":["C:/Users/fredr/Documents/Universitet/HT20/2DV515 - Web Intelligence/A1/pages/api/euclidean/[id].ts"],"names":["sqlite3","require","sqlite","euclidean","req","res","id","query","db","open","filename","driver","Database","ratings1","all","JSON","stringify","ratings2","json"],"mappings":"AACA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AAEA,MAAME,SAAS,GAAG,OAAOC,GAAP,EAA4BC,GAA5B,KAAqD;AACnE,QAAMC,EAAE,GAAGF,GAAG,CAACG,KAAJ,CAAUD,EAArB,CADmE,CAC1C;;AAEzB;;AACA,QAAME,EAAE,GAAG,MAAMN,MAAM,CAACO,IAAP,CAAY;AACzBC,IAAAA,QAAQ,EAAE,eADe;AAEzBC,IAAAA,MAAM,EAAEX,OAAO,CAACY;AAFS,GAAZ,CAAjB;AAKA;;AACA,MAAIC,QAAQ,GAAG,MAAML,EAAE,CAACM,GAAH,CAAO,qIAAP,EAA8I,CAACR,EAAD,CAA9I,CAArB;AACAO,EAAAA,QAAQ,GAAGE,IAAI,CAACC,SAAL,CAAeH,QAAf,EAAyB,IAAzB,EAA+B,CAA/B,CAAX;AAEA;;AACA,MAAII,QAAQ,GAAG,MAAMT,EAAE,CAACM,GAAH,CAAO,8IAAP,EAAuJ,CAAC,CAAD,CAAvJ,CAArB;AACAG,EAAAA,QAAQ,GAAGF,IAAI,CAACC,SAAL,CAAeC,QAAf,EAAyB,IAAzB,EAA+B,CAA/B,CAAX;AAEAZ,EAAAA,GAAG,CAACa,IAAJ,CAASL,QAAT;AACAR,EAAAA,GAAG,CAACa,IAAJ,CAASD,QAAT;AACH,CAnBD;;AAqBA,eAAed,SAAf","sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next';\r\nconst sqlite3 = require('sqlite3');\r\nconst sqlite = require('sqlite');\r\n\r\nconst euclidean = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    const id = req.query.id; // main user\r\n\r\n    /* DB connection */\r\n    const db = await sqlite.open({\r\n        filename: './mydb.sqlite',\r\n        driver: sqlite3.Database\r\n    });\r\n   \r\n    /* Retrieve ratings that belongs to main user */\r\n    let ratings1 = await db.all('SELECT userId, movieId, ratings.rating FROM ratings, users, movies WHERE users.id = userId AND movies.id = movieId AND users.id = ?', [id]);\r\n    ratings1 = JSON.stringify(ratings1, null, 2);\r\n\r\n    /* Retrieve ratings for all the other users */\r\n    let ratings2 = await db.all('SELECT userId, ratings.movieId, ratings.rating FROM ratings, users, movies WHERE users.id = userId AND movies.id = movieId AND users.id != ?', [2]);\r\n    ratings2 = JSON.stringify(ratings2, null, 2);\r\n\r\n    res.json(ratings1);\r\n    res.json(ratings2);\r\n}\r\n\r\nexport default euclidean;"]},"metadata":{},"sourceType":"module"}