{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\fredr\\\\Documents\\\\Universitet\\\\HT20\\\\2DV515 - Web Intelligence\\\\A2\\\\pages\\\\index.tsx\";\n\n/* Lib */\nimport { useEffect, useState } from 'react';\n\nconst Index = () => {\n  const {\n    0: cluster,\n    1: setCluster\n  } = useState([]);\n\n  const fetchCluster = async () => {\n    await fetch('/api/blog').then(res => res.json()).then(result => {\n      setCluster(result);\n    });\n  };\n\n  useEffect(() => {\n    fetchCluster();\n  }, [cluster]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [console.log(cluster), cluster.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Hej\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/fredr/Documents/Universitet/HT20/2DV515 - Web Intelligence/A2/pages/index.tsx"],"names":["useEffect","useState","Index","cluster","setCluster","fetchCluster","fetch","then","res","json","result","console","log","length"],"mappings":";;;;AAAA;AAEA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBH,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMI,YAAY,GAAG,YAAY;AAC/B,UAAMC,KAAK,CAAC,WAAD,CAAL,CACHC,IADG,CACGC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADX,EAEHF,IAFG,CAEGG,MAAD,IAAY;AAChBN,MAAAA,UAAU,CAACM,MAAD,CAAV;AACD,KAJG,CAAN;AAKD,GAND;;AAQAV,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,YAAY;AACb,GAFQ,EAEN,CAACF,OAAD,CAFM,CAAT;AAIA,sBACE;AAAA,eACGQ,OAAO,CAACC,GAAR,CAAYT,OAAZ,CADH,EAEGA,OAAO,CAACU,MAAR,GAAiB,CAAjB,iBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFzB;AAAA,kBADF;AAMD,CArBD;;AAuBA,eAAeX,KAAf","sourcesContent":["/* Lib */\r\nimport cx from 'classnames'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst Index = () => {\r\n  const [cluster, setCluster] = useState([])\r\n\r\n  const fetchCluster = async () => {\r\n    await fetch('/api/blog')\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        setCluster(result)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchCluster()\r\n  }, [cluster])\r\n\r\n  return (\r\n    <>\r\n      {console.log(cluster)}\r\n      {cluster.length > 0 && <div>Hej</div>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Index\r\n"]},"metadata":{},"sourceType":"module"}