{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\fredr\\\\Documents\\\\Universitet\\\\HT20\\\\2DV515 - Web Intelligence\\\\A2\\\\pages\\\\index.tsx\";\n\n/* Lib */\nimport cx from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { Container, Accordion, Card, Button } from 'react-bootstrap';\n\nconst Index = () => {\n  const {\n    0: cluster,\n    1: setCluster\n  } = useState([]);\n\n  const fetchCluster = async () => {\n    await fetch('/api/blog').then(res => res.json()).then(result => {\n      setCluster(result);\n    });\n  };\n\n  useEffect(() => {\n    fetchCluster();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [console.log(cluster.length), /*#__PURE__*/_jsxDEV(Container, {\n      className: cx(['mt-5']),\n      children: /*#__PURE__*/_jsxDEV(Accordion, {\n        defaultActiveKey: \"0\",\n        children: cluster.length > 0 && cluster.map((x, i) => /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n              as: Button,\n              variant: \"link\",\n              eventKey: i,\n              children: [\"Cluster (\", x.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n            eventKey: \"0\",\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: \"Hello! I'm the body\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/fredr/Documents/Universitet/HT20/2DV515 - Web Intelligence/A2/pages/index.tsx"],"names":["cx","useEffect","useState","Container","Accordion","Card","Button","Index","cluster","setCluster","fetchCluster","fetch","then","res","json","result","console","log","length","map","x","i"],"mappings":";;;;AAAA;AACA,OAAOA,EAAP,MAAe,YAAf;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,IAA/B,EAAqCC,MAArC,QAAmD,iBAAnD;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBP,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMQ,YAAY,GAAG,YAAY;AAC/B,UAAMC,KAAK,CAAC,WAAD,CAAL,CACHC,IADG,CACGC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADX,EAEHF,IAFG,CAEGG,MAAD,IAAY;AAChBN,MAAAA,UAAU,CAACM,MAAD,CAAV;AACD,KAJG,CAAN;AAKD,GAND;;AAQAd,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,eACGM,OAAO,CAACC,GAAR,CAAYT,OAAO,CAACU,MAApB,CADH,eAEE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAElB,EAAE,CAAC,CAAC,MAAD,CAAD,CAAxB;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,gBAAgB,EAAC,GAA5B;AAAA,kBACGQ,OAAO,CAACU,MAAR,GAAiB,CAAjB,IACCV,OAAO,CAACW,GAAR,CAAY,CAACC,CAAD,EAAIC,CAAJ,kBACV,QAAC,IAAD;AAAA,kCACE,QAAC,IAAD,CAAM,MAAN;AAAA,mCACE,QAAC,SAAD,CAAW,MAAX;AAAkB,cAAA,EAAE,EAAEf,MAAtB;AAA8B,cAAA,OAAO,EAAC,MAAtC;AAA6C,cAAA,QAAQ,EAAEe,CAAvD;AAAA,sCACYD,CAAC,CAACF,MADd;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAME,QAAC,SAAD,CAAW,QAAX;AAAoB,YAAA,QAAQ,EAAC,GAA7B;AAAA,mCACE,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAsBD,CArCD;;AAuCA,eAAeX,KAAf","sourcesContent":["/* Lib */\r\nimport cx from 'classnames'\r\nimport { useEffect, useState } from 'react'\r\nimport { Container, Accordion, Card, Button } from 'react-bootstrap'\r\n\r\nconst Index = () => {\r\n  const [cluster, setCluster] = useState([])\r\n\r\n  const fetchCluster = async () => {\r\n    await fetch('/api/blog')\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        setCluster(result)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchCluster()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      {console.log(cluster.length)}\r\n      <Container className={cx(['mt-5'])}>\r\n        <Accordion defaultActiveKey=\"0\">\r\n          {cluster.length > 0 &&\r\n            cluster.map((x, i) => (\r\n              <Card>\r\n                <Card.Header>\r\n                  <Accordion.Toggle as={Button} variant=\"link\" eventKey={i}>\r\n                    Cluster ({x.length})\r\n                  </Accordion.Toggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                  <Card.Body>Hello! I'm the body</Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            ))}\r\n        </Accordion>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Index\r\n"]},"metadata":{},"sourceType":"module"}