{"ast":null,"code":"const sqlite3 = require('sqlite3');\n\nconst sqlite = require('sqlite');\n\nconst getUserRatings = async id => {\n  return await db.all('SELECT userId, movies.title, movieId, ratings.rating FROM ratings, users, movies WHERE users.id = userId AND movies.id = movieId AND users.id = ?', [id]);\n};\n\nexport default getUserRatings;","map":{"version":3,"sources":["C:/Users/fredr/Documents/Universitet/HT20/2DV515 - Web Intelligence/A1/sql/getUserRatings.js"],"names":["sqlite3","require","sqlite","getUserRatings","id","db","all"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AAEA,MAAME,cAAc,GAAG,MAAOC,EAAP,IAAc;AACjC,SAAO,MAAMC,EAAE,CAACC,GAAH,CAAO,mJAAP,EAA4J,CAACF,EAAD,CAA5J,CAAb;AACH,CAFD;;AAIA,eAAeD,cAAf","sourcesContent":["const sqlite3 = require('sqlite3');\r\nconst sqlite = require('sqlite');\r\n\r\nconst getUserRatings = async (id) => {\r\n    return await db.all('SELECT userId, movies.title, movieId, ratings.rating FROM ratings, users, movies WHERE users.id = userId AND movies.id = movieId AND users.id = ?', [id]);\r\n}\r\n\r\nexport default getUserRatings;"]},"metadata":{},"sourceType":"module"}