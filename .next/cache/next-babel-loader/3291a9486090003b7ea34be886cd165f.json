{"ast":null,"code":"const sqlite3 = require('sqlite3');\n\nconst sqlite = require('sqlite');\n\nconst getUsersExcept = async (db, id) => {\n  return await db.all('SELECT ratings.movieId, title, ratings.rating FROM ratings, users, movies WHERE users.id = userId AND movies.id = movieId AND users.id = ?', [id]);\n};\n\nexport default getUsersExcept;","map":{"version":3,"sources":["C:/Users/fredr/Documents/Universitet/HT20/2DV515 - Web Intelligence/A1/sql/getUsersExcept.js"],"names":["sqlite3","require","sqlite","getUsersExcept","db","id","all"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AAEA,MAAME,cAAc,GAAG,OAAOC,EAAP,EAAWC,EAAX,KAAkB;AACrC,SAAO,MAAMD,EAAE,CAACE,GAAH,CAAO,4IAAP,EAAqJ,CAACD,EAAD,CAArJ,CAAb;AACH,CAFD;;AAIA,eAAeF,cAAf","sourcesContent":["const sqlite3 = require('sqlite3');\r\nconst sqlite = require('sqlite');\r\n\r\nconst getUsersExcept = async (db, id) => {\r\n    return await db.all('SELECT ratings.movieId, title, ratings.rating FROM ratings, users, movies WHERE users.id = userId AND movies.id = movieId AND users.id = ?', [id]);\r\n}\r\n\r\nexport default getUsersExcept;"]},"metadata":{},"sourceType":"module"}