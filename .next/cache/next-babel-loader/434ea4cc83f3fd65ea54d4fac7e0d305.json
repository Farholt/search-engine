{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\fredr\\\\Documents\\\\Universitet\\\\HT20\\\\2DV515 - Web Intelligence\\\\A1\\\\pages\\\\index.tsx\";\n\n/* Lib */\nimport cx from 'classnames';\nimport { useState } from 'react';\n\nconst Index = () => {\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: isLoaded,\n    1: setIsLoaded\n  } = useState(false);\n  const {\n    0: users,\n    1: setUsers\n  } = useState([]);\n  const {\n    0: target,\n    1: setTarget\n  } = useState(null); // useEffect(() => {\n  //     fetch('/api/users')\n  //         .then(res => res.json())\n  //         .then(\n  //             (result) => {\n  //                 setIsLoaded(true);\n  //                 setUsers(result);\n  //                 setTarget(result);\n  //             },\n  //             (error) => {\n  //                 setIsLoaded(true);\n  //                 setError(error);\n  //             }\n  //     )\n  // })\n\n  const handleChange = e => {\n    console.log(e.target.value);\n  };\n\n  let sim = [{\n    value: 1,\n    description: 'Euclidean'\n  }, {\n    value: 2,\n    description: 'Pearson Colleration'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cx(['container'], ['m-5']),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cx(['row']),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: cx(['col-sm']),\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"custom-select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cx(['col-sm']),\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"custom-select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/fredr/Documents/Universitet/HT20/2DV515 - Web Intelligence/A1/pages/index.tsx"],"names":["cx","useState","Index","error","setError","isLoaded","setIsLoaded","users","setUsers","target","setTarget","handleChange","e","console","log","value","sim","description"],"mappings":";;;AAAA;AACA,OAAOA,EAAP,MAAe,YAAf;AACA,SAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAChB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBH,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAAA,OAACI,QAAD;AAAA,OAAWC;AAAX,MAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAA,OAACM,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACQ,MAAD;AAAA,OAASC;AAAT,MAAsBT,QAAQ,CAAC,IAAD,CAApC,CAJgB,CAMhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMU,YAAY,GAAIC,CAAD,IAAY;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACH,MAAF,CAASM,KAArB;AACH,GAFD;;AAIA,MAAIC,GAAG,GAAG,CAAC;AAAED,IAAAA,KAAK,EAAE,CAAT;AAAYE,IAAAA,WAAW,EAAE;AAAzB,GAAD,EAAyC;AAAEF,IAAAA,KAAK,EAAE,CAAT;AAAYE,IAAAA,WAAW,EAAE;AAAzB,GAAzC,CAAV;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEjB,EAAE,CAAC,CAAC,WAAD,CAAD,EAAgB,CAAC,KAAD,CAAhB,CAAlB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAEA,EAAE,CAAC,CAAC,KAAD,CAAD,CAAlB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAEA,EAAE,CAAC,CAAC,QAAD,CAAD,CAAlB;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAK,QAAA,SAAS,EAAEA,EAAE,CAAC,CAAC,QAAD,CAAD,CAAlB;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA5CD;;AA8CA,eAAeE,KAAf","sourcesContent":["/* Lib */\r\nimport cx from 'classnames';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst Index = () => {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [users, setUsers] = useState([]);\r\n    const [target, setTarget] = useState(null);\r\n\r\n    // useEffect(() => {\r\n    //     fetch('/api/users')\r\n    //         .then(res => res.json())\r\n    //         .then(\r\n    //             (result) => {\r\n    //                 setIsLoaded(true);\r\n    //                 setUsers(result);\r\n    //                 setTarget(result);\r\n    //             },\r\n    //             (error) => {\r\n    //                 setIsLoaded(true);\r\n    //                 setError(error);\r\n    //             }\r\n    //     )\r\n    // })\r\n\r\n    const handleChange = (e: any) => {\r\n        console.log(e.target.value);\r\n    }\r\n\r\n    let sim = [{ value: 1, description: 'Euclidean' }, { value: 2, description: 'Pearson Colleration' }];\r\n\r\n    return (\r\n        <div className={cx(['container'], ['m-5'])}>\r\n            <div className={cx(['row'])}>\r\n                <div className={cx(['col-sm'])}>\r\n                    <select className=\"custom-select\">\r\n                        {/* {users.map((u: any, i: number) => <option value={u.id} key={i}>{u.id}: {u.name}</option>)} */}\r\n                    </select>\r\n                </div>\r\n                <div className={cx(['col-sm'])}>\r\n                    <select className=\"custom-select\">\r\n                        {/* {sim.map((sim: any, i: number) => <option value={i} key={i}>{sim.description}</option>)} */}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}