{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/fredr/Documents/Universitet/HT20/2DV515 - Web Intelligence/A2/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/fredr/Documents/Universitet/HT20/2DV515 - Web Intelligence/A2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\fredr\\\\Documents\\\\Universitet\\\\HT20\\\\2DV515 - Web Intelligence\\\\A2\\\\pages\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/* Lib */\nimport cx from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { Container, Accordion, Card, Button, ListGroup } from 'react-bootstrap';\n\nvar Index = function Index() {\n  _s();\n\n  var _useState = useState([]),\n      cluster = _useState[0],\n      setCluster = _useState[1];\n\n  var fetchCluster = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/api/blog').then(function (res) {\n                return res.json();\n              }).then(function (result) {\n                setCluster(result);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchCluster() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchCluster();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: cx(['mt-5']),\n      children: /*#__PURE__*/_jsxDEV(Accordion, {\n        defaultActiveKey: \"0\",\n        children: cluster.length > 0 && cluster.map(function (clusterGroup, i) {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n                as: Button,\n                variant: \"link\",\n                eventKey: \"\".concat(i),\n                children: [\"#\", i, \" Cluster (\", clusterGroup.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n              eventKey: \"\".concat(i),\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(ListGroup, {\n                  variant: \"flush\",\n                  children: clusterGroup.map(function (clusterItems) {\n                    return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                      className: \"text-muted\",\n                      children: clusterItems\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 41,\n                      columnNumber: 25\n                    }, _this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, _this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(Index, \"1Y2oHWS1dvn9ZQlQ2O14TsloC60=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/fredr/Documents/Universitet/HT20/2DV515 - Web Intelligence/A2/pages/index.tsx"],"names":["cx","useEffect","useState","Container","Accordion","Card","Button","ListGroup","Index","cluster","setCluster","fetchCluster","fetch","then","res","json","result","length","map","clusterGroup","i","clusterItems"],"mappings":";;;;;;;;;AAAA;AACA,OAAOA,EAAP,MAAe,YAAf;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,IAA/B,EAAqCC,MAArC,EAA6CC,SAA7C,QAA8D,iBAA9D;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAW;AAAA;;AAAA,kBACON,QAAQ,CAAC,EAAD,CADf;AAAA,MAChBO,OADgB;AAAA,MACPC,UADO;;AAGvB,MAAMC,YAAiB;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAClBC,KAAK,CAAC,WAAD,CAAL,CACHC,IADG,CACE,UAACC,GAAD;AAAA,uBAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,eADF,EAEHF,IAFG,CAEE,UAACG,MAAD,EAAY;AAChBN,gBAAAA,UAAU,CAACM,MAAD,CAAV;AACD,eAJG,CADkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAjBL,YAAiB;AAAA;AAAA;AAAA,KAAvB;;AAQAV,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAEX,EAAE,CAAC,CAAC,MAAD,CAAD,CAAxB;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,gBAAgB,EAAC,GAA5B;AAAA,kBACGS,OAAO,CAACQ,MAAR,GAAiB,CAAjB,IACCR,OAAO,CAACS,GAAR,CAAY,UAACC,YAAD,EAAeC,CAAf;AAAA,8BACV,QAAC,IAAD;AAAA,oCACE,QAAC,IAAD,CAAM,MAAN;AAAA,qCACE,QAAC,SAAD,CAAW,MAAX;AACE,gBAAA,EAAE,EAAEd,MADN;AAEE,gBAAA,OAAO,EAAC,MAFV;AAGE,gBAAA,QAAQ,YAAKc,CAAL,CAHV;AAAA,gCAKIA,CALJ,gBAKiBD,YAAY,CAACF,MAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBADF,eAUE,QAAC,SAAD,CAAW,QAAX;AAAoB,cAAA,QAAQ,YAAKG,CAAL,CAA5B;AAAA,qCACE,QAAC,IAAD,CAAM,IAAN;AAAA,uCACE,QAAC,SAAD;AAAW,kBAAA,OAAO,EAAC,OAAnB;AAAA,4BACGD,YAAY,CAACD,GAAb,CAAiB,UAACG,YAAD;AAAA,wCAChB,QAAC,SAAD,CAAW,IAAX;AAAgB,sBAAA,SAAS,EAAC,YAA1B;AAAA,gCACGA;AADH;AAAA;AAAA;AAAA;AAAA,6BADgB;AAAA,mBAAjB;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBAVF;AAAA,aAAWD,CAAX;AAAA;AAAA;AAAA;AAAA,mBADU;AAAA,SAAZ;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAiCD,CAhDD;;GAAMZ,K;;KAAAA,K;AAkDN,eAAeA,KAAf","sourcesContent":["/* Lib */\r\nimport cx from 'classnames'\r\nimport { useEffect, useState } from 'react'\r\nimport { Container, Accordion, Card, Button, ListGroup } from 'react-bootstrap'\r\n\r\nconst Index = (): any => {\r\n  const [cluster, setCluster] = useState([])\r\n\r\n  const fetchCluster: any = async () => {\r\n    await fetch('/api/blog')\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        setCluster(result)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchCluster()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Container className={cx(['mt-5'])}>\r\n        <Accordion defaultActiveKey=\"0\">\r\n          {cluster.length > 0 &&\r\n            cluster.map((clusterGroup, i) => (\r\n              <Card key={i}>\r\n                <Card.Header>\r\n                  <Accordion.Toggle\r\n                    as={Button}\r\n                    variant=\"link\"\r\n                    eventKey={`${i}`}\r\n                  >\r\n                    #{i} Cluster ({clusterGroup.length})\r\n                  </Accordion.Toggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey={`${i}`}>\r\n                  <Card.Body>\r\n                    <ListGroup variant=\"flush\">\r\n                      {clusterGroup.map((clusterItems: any) => (\r\n                        <ListGroup.Item className=\"text-muted\">\r\n                          {clusterItems}\r\n                        </ListGroup.Item>\r\n                      ))}\r\n                    </ListGroup>\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            ))}\r\n        </Accordion>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Index\r\n"]},"metadata":{},"sourceType":"module"}