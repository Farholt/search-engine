{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/fredr/Documents/Universitet/HT20/2DV515 - Web Intelligence/A2/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/fredr/Documents/Universitet/HT20/2DV515 - Web Intelligence/A2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\fredr\\\\Documents\\\\Universitet\\\\HT20\\\\2DV515 - Web Intelligence\\\\A2\\\\pages\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/* Lib */\nimport { useEffect, useState } from 'react';\nimport { Container, Accordion, Card, Button } from 'react-bootstrap';\n\nvar Index = function Index() {\n  _s();\n\n  var _useState = useState([]),\n      cluster = _useState[0],\n      setCluster = _useState[1];\n\n  var fetchCluster = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/api/blog').then(function (res) {\n                return res.json();\n              }).then(function (result) {\n                setCluster(result);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchCluster() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchCluster();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [console.log(cluster.length), cluster.length > 0 && /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Accordion, {\n        defaultActiveKey: \"0\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n              as: Button,\n              variant: \"link\",\n              eventKey: \"0\",\n              children: \"Click me!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n            eventKey: \"0\",\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: \"Hello! I'm the body\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n              as: Button,\n              variant: \"link\",\n              eventKey: \"1\",\n              children: \"Click me!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n            eventKey: \"1\",\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: \"Hello! I'm another body\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Index, \"1Y2oHWS1dvn9ZQlQ2O14TsloC60=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/fredr/Documents/Universitet/HT20/2DV515 - Web Intelligence/A2/pages/index.tsx"],"names":["useEffect","useState","Container","Accordion","Card","Button","Index","cluster","setCluster","fetchCluster","fetch","then","res","json","result","console","log","length"],"mappings":";;;;;;;;;AAAA;AAEA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,IAA/B,EAAqCC,MAArC,QAAmD,iBAAnD;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAAA,kBACYL,QAAQ,CAAC,EAAD,CADpB;AAAA,MACXM,OADW;AAAA,MACFC,UADE;;AAGlB,MAAMC,YAAY;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACbC,KAAK,CAAC,WAAD,CAAL,CACHC,IADG,CACE,UAACC,GAAD;AAAA,uBAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,eADF,EAEHF,IAFG,CAEE,UAACG,MAAD,EAAY;AAChBN,gBAAAA,UAAU,CAACM,MAAD,CAAV;AACD,eAJG,CADa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZL,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAQAT,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,eACGM,OAAO,CAACC,GAAR,CAAYT,OAAO,CAACU,MAApB,CADH,EAEGV,OAAO,CAACU,MAAR,GAAiB,CAAjB,iBACC,QAAC,SAAD;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,gBAAgB,EAAC,GAA5B;AAAA,gCACE,QAAC,IAAD;AAAA,kCACE,QAAC,IAAD,CAAM,MAAN;AAAA,mCACE,QAAC,SAAD,CAAW,MAAX;AAAkB,cAAA,EAAE,EAAEZ,MAAtB;AAA8B,cAAA,OAAO,EAAC,MAAtC;AAA6C,cAAA,QAAQ,EAAC,GAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBADF,eAME,QAAC,SAAD,CAAW,QAAX;AAAoB,YAAA,QAAQ,EAAC,GAA7B;AAAA,mCACE,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBANF;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAWE,QAAC,IAAD;AAAA,kCACE,QAAC,IAAD,CAAM,MAAN;AAAA,mCACE,QAAC,SAAD,CAAW,MAAX;AAAkB,cAAA,EAAE,EAAEA,MAAtB;AAA8B,cAAA,OAAO,EAAC,MAAtC;AAA6C,cAAA,QAAQ,EAAC,GAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBADF,eAME,QAAC,SAAD,CAAW,QAAX;AAAoB,YAAA,QAAQ,EAAC,GAA7B;AAAA,mCACE,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBANF;AAAA;AAAA;AAAA;AAAA;AAAA,iBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAHJ;AAAA,kBADF;AA+BD,CA9CD;;GAAMC,K;;KAAAA,K;AAgDN,eAAeA,KAAf","sourcesContent":["/* Lib */\r\nimport cx from 'classnames'\r\nimport { useEffect, useState } from 'react'\r\nimport { Container, Accordion, Card, Button } from 'react-bootstrap'\r\n\r\nconst Index = () => {\r\n  const [cluster, setCluster] = useState([])\r\n\r\n  const fetchCluster = async () => {\r\n    await fetch('/api/blog')\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        setCluster(result)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchCluster()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      {console.log(cluster.length)}\r\n      {cluster.length > 0 && (\r\n        <Container>\r\n          <Accordion defaultActiveKey=\"0\">\r\n            <Card>\r\n              <Card.Header>\r\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                  Click me!\r\n                </Accordion.Toggle>\r\n              </Card.Header>\r\n              <Accordion.Collapse eventKey=\"0\">\r\n                <Card.Body>Hello! I'm the body</Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n            <Card>\r\n              <Card.Header>\r\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                  Click me!\r\n                </Accordion.Toggle>\r\n              </Card.Header>\r\n              <Accordion.Collapse eventKey=\"1\">\r\n                <Card.Body>Hello! I'm another body</Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          </Accordion>\r\n        </Container>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Index\r\n"]},"metadata":{},"sourceType":"module"}