{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\fredr\\\\Documents\\\\Universitet\\\\HT20\\\\2DV515 - Web Intelligence\\\\A2\\\\pages\\\\index.tsx\";\n\n/* Lib */\nimport cx from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { Container, Accordion, Card, Button, ListGroup } from 'react-bootstrap';\n\nconst Index = () => {\n  const {\n    0: cluster,\n    1: setCluster\n  } = useState([]);\n\n  const fetchCluster = async () => {\n    await fetch('/api/blog').then(res => res.json()).then(result => {\n      setCluster(result);\n    });\n  };\n\n  useEffect(() => {\n    fetchCluster();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: cx(['mt-5']),\n      children: /*#__PURE__*/_jsxDEV(Accordion, {\n        defaultActiveKey: \"0\",\n        children: cluster.length > 0 && cluster.map((clusterGroup, i) => /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n              as: Button,\n              variant: \"link\",\n              eventKey: `${i}`,\n              children: [\"#\", i, \" Cluster (\", clusterGroup.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n            eventKey: `${i}`,\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(ListGroup, {\n                variant: \"flush\",\n                children: clusterGroup.map(clusterItems => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  className: \"text-muted\",\n                  children: clusterItems\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/fredr/Documents/Universitet/HT20/2DV515 - Web Intelligence/A2/pages/index.tsx"],"names":["cx","useEffect","useState","Container","Accordion","Card","Button","ListGroup","Index","cluster","setCluster","fetchCluster","fetch","then","res","json","result","length","map","clusterGroup","i","clusterItems"],"mappings":";;;;AAAA;AACA,OAAOA,EAAP,MAAe,YAAf;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,IAA/B,EAAqCC,MAArC,EAA6CC,SAA7C,QAA8D,iBAA9D;;AAEA,MAAMC,KAAK,GAAG,MAAW;AACvB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBR,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMS,YAAiB,GAAG,YAAY;AACpC,UAAMC,KAAK,CAAC,WAAD,CAAL,CACHC,IADG,CACGC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADX,EAEHF,IAFG,CAEGG,MAAD,IAAY;AAChBN,MAAAA,UAAU,CAACM,MAAD,CAAV;AACD,KAJG,CAAN;AAKD,GAND;;AAQAf,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAEX,EAAE,CAAC,CAAC,MAAD,CAAD,CAAxB;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,gBAAgB,EAAC,GAA5B;AAAA,kBACGS,OAAO,CAACQ,MAAR,GAAiB,CAAjB,IACCR,OAAO,CAACS,GAAR,CAAY,CAACC,YAAD,EAAeC,CAAf,kBACV,QAAC,IAAD;AAAA,kCACE,QAAC,IAAD,CAAM,MAAN;AAAA,mCACE,QAAC,SAAD,CAAW,MAAX;AACE,cAAA,EAAE,EAAEd,MADN;AAEE,cAAA,OAAO,EAAC,MAFV;AAGE,cAAA,QAAQ,EAAG,GAAEc,CAAE,EAHjB;AAAA,8BAKIA,CALJ,gBAKiBD,YAAY,CAACF,MAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE,QAAC,SAAD,CAAW,QAAX;AAAoB,YAAA,QAAQ,EAAG,GAAEG,CAAE,EAAnC;AAAA,mCACE,QAAC,IAAD,CAAM,IAAN;AAAA,qCACE,QAAC,SAAD;AAAW,gBAAA,OAAO,EAAC,OAAnB;AAAA,0BACGD,YAAY,CAACD,GAAb,CAAkBG,YAAD,iBAChB,QAAC,SAAD,CAAW,IAAX;AAAgB,kBAAA,SAAS,EAAC,YAA1B;AAAA,4BACGA;AADH;AAAA;AAAA;AAAA;AAAA,wBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA,WAAWD,CAAX;AAAA;AAAA;AAAA;AAAA,gBADF;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAiCD,CAhDD;;AAkDA,eAAeZ,KAAf","sourcesContent":["/* Lib */\r\nimport cx from 'classnames'\r\nimport { useEffect, useState } from 'react'\r\nimport { Container, Accordion, Card, Button, ListGroup } from 'react-bootstrap'\r\n\r\nconst Index = (): any => {\r\n  const [cluster, setCluster] = useState([])\r\n\r\n  const fetchCluster: any = async () => {\r\n    await fetch('/api/blog')\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        setCluster(result)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchCluster()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Container className={cx(['mt-5'])}>\r\n        <Accordion defaultActiveKey=\"0\">\r\n          {cluster.length > 0 &&\r\n            cluster.map((clusterGroup, i) => (\r\n              <Card key={i}>\r\n                <Card.Header>\r\n                  <Accordion.Toggle\r\n                    as={Button}\r\n                    variant=\"link\"\r\n                    eventKey={`${i}`}\r\n                  >\r\n                    #{i} Cluster ({clusterGroup.length})\r\n                  </Accordion.Toggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey={`${i}`}>\r\n                  <Card.Body>\r\n                    <ListGroup variant=\"flush\">\r\n                      {clusterGroup.map((clusterItems: any) => (\r\n                        <ListGroup.Item className=\"text-muted\">\r\n                          {clusterItems}\r\n                        </ListGroup.Item>\r\n                      ))}\r\n                    </ListGroup>\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            ))}\r\n        </Accordion>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Index\r\n"]},"metadata":{},"sourceType":"module"}