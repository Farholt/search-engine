{"ast":null,"code":"import jsonResult from '../../shared/functions/convertDatasetToJson'; // import {\n//   Centroid,\n//   clearAssignments,\n//   assign,\n//   isUnchanged,\n// } from '../../shared/functions/centroid'\n\nconst random = from => to => from + Math.random() * (to - from); // const initCentroid = (k: any, ranges: any) => {\n//   const centroids = []\n//   for (let i = 0; i < k; i++) {\n//     centroids[i] = new Centroid()\n//     ranges.forEach(({ min, max }, idx) => {\n//       centroids[i].setWordCount(idx, random(min)(max))\n//     })\n//   }\n//   return centroids\n// }\n\n\nconst kMean = (req, res) => {\n  const n = jsonResult()[0].total;\n  const centroids = [];\n  res.json(JSON.stringify(jsonResult()[0].total, null, 2));\n};\n\nexport default kMean;","map":{"version":3,"sources":["C:/Users/fredr/Documents/Universitet/HT20/2DV515 - Web Intelligence/A2/pages/api/blog.ts"],"names":["jsonResult","random","from","to","Math","kMean","req","res","n","total","centroids","json","JSON","stringify"],"mappings":"AACA,OAAOA,UAAP,MAAuB,6CAAvB,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,MAAM,GAAIC,IAAD,IAAmBC,EAAD,IAC/BD,IAAI,GAAGE,IAAI,CAACH,MAAL,MAAiBE,EAAE,GAAGD,IAAtB,CADT,C,CAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA,MAAMG,KAAK,GAAG,CAACC,GAAD,EAAsBC,GAAtB,KAA+C;AAC3D,QAAMC,CAAC,GAAGR,UAAU,GAAG,CAAH,CAAV,CAAgBS,KAA1B;AAEA,QAAMC,SAAS,GAAG,EAAlB;AAEAH,EAAAA,GAAG,CAACI,IAAJ,CAASC,IAAI,CAACC,SAAL,CAAeb,UAAU,GAAG,CAAH,CAAV,CAAgBS,KAA/B,EAAsC,IAAtC,EAA4C,CAA5C,CAAT;AACD,CAND;;AAQA,eAAeJ,KAAf","sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next'\r\nimport jsonResult from '../../shared/functions/convertDatasetToJson'\r\n\r\n// import {\r\n//   Centroid,\r\n//   clearAssignments,\r\n//   assign,\r\n//   isUnchanged,\r\n// } from '../../shared/functions/centroid'\r\n\r\nconst random = (from: number) => (to: number) =>\r\n  from + Math.random() * (to - from)\r\n\r\n// const initCentroid = (k: any, ranges: any) => {\r\n//   const centroids = []\r\n\r\n//   for (let i = 0; i < k; i++) {\r\n//     centroids[i] = new Centroid()\r\n//     ranges.forEach(({ min, max }, idx) => {\r\n//       centroids[i].setWordCount(idx, random(min)(max))\r\n//     })\r\n//   }\r\n\r\n//   return centroids\r\n// }\r\n\r\nconst kMean = (req: NextApiRequest, res: NextApiResponse) => {\r\n  const n = jsonResult()[0].total\r\n\r\n  const centroids = []\r\n\r\n  res.json(JSON.stringify(jsonResult()[0].total, null, 2))\r\n}\r\n\r\nexport default kMean\r\n"]},"metadata":{},"sourceType":"module"}